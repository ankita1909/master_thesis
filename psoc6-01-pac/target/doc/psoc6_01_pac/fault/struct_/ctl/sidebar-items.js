initSidebarItems({"struct":[["CTL_SPEC","Fault control"],["OUT_EN_R","Field `OUT_EN` reader - IO output signal enable: ‘0’: Disabled. The IO output signal ‘fault_out’ is ‘0’. The IO output enable signal ‘fault_out_en’ is ‘0’. ‘1’: Enabled. The IO output signal ‘fault_out’ reflects STATUS.VALID. The IO output enable signal ‘fault_out_en’ is ‘1’."],["OUT_EN_W","Field `OUT_EN` writer - IO output signal enable: ‘0’: Disabled. The IO output signal ‘fault_out’ is ‘0’. The IO output enable signal ‘fault_out_en’ is ‘0’. ‘1’: Enabled. The IO output signal ‘fault_out’ reflects STATUS.VALID. The IO output enable signal ‘fault_out_en’ is ‘1’."],["R","Register `CTL` reader"],["RESET_REQ_EN_R","Field `RESET_REQ_EN` reader - Reset request enable: ‘0’: Disabled. ‘1’: Enabled. The output reset request signal ‘fault_reset_req’ reflects STATUS.VALID. This reset causes a warm/soft/core reset. This warm/soft/core reset does not affect the fault logic STATUS, DATA0, …, DATA3 registers (allowing for post soft reset failure analysis). The ‘fault_reset_req’ signals of the individual fault report structures are combined (logically OR’d) into a single SRSS ‘fault_reset_req’ signal."],["RESET_REQ_EN_W","Field `RESET_REQ_EN` writer - Reset request enable: ‘0’: Disabled. ‘1’: Enabled. The output reset request signal ‘fault_reset_req’ reflects STATUS.VALID. This reset causes a warm/soft/core reset. This warm/soft/core reset does not affect the fault logic STATUS, DATA0, …, DATA3 registers (allowing for post soft reset failure analysis). The ‘fault_reset_req’ signals of the individual fault report structures are combined (logically OR’d) into a single SRSS ‘fault_reset_req’ signal."],["TR_EN_R","Field `TR_EN` reader - Trigger output enable: ‘0’: Disabled. The trigger output ‘tr_fault’ is ‘0’. ‘1’: Enabled. The trigger output ‘tr_fault’ reflects STATUS.VALID. The trigger can be used to initiate a Datawire transfer of the FAULT data (FAULT_DATA0 through FAULT_DATA3)."],["TR_EN_W","Field `TR_EN` writer - Trigger output enable: ‘0’: Disabled. The trigger output ‘tr_fault’ is ‘0’. ‘1’: Enabled. The trigger output ‘tr_fault’ reflects STATUS.VALID. The trigger can be used to initiate a Datawire transfer of the FAULT data (FAULT_DATA0 through FAULT_DATA3)."],["W","Register `CTL` writer"]]});