initSidebarItems({"enum":[["WDT_MODE0_A","Watchdog Counter Action on Match. Action is taken on the next increment after the values match (WDT_CTR0=WDT_MATCH0)."],["WDT_MODE1_A","Watchdog Counter Action on Match. Action is taken on the next increment after the values match (WDT_CTR1=WDT_MATCH1)."],["WDT_MODE2_A","Watchdog Counter 2 Mode."]],"struct":[["MCWDT_CONFIG_SPEC","Multi-Counter Watchdog Counter Configuration"],["R","Register `MCWDT_CONFIG` reader"],["W","Register `MCWDT_CONFIG` writer"],["WDT_BITS2_R","Field `WDT_BITS2` reader - Bit to observe for WDT_INT2: 0: Assert after bit0 of WDT_CTR2 toggles (one int every tick) … 31: Assert after bit31 of WDT_CTR2 toggles (one int every 2^31 ticks)"],["WDT_BITS2_W","Field `WDT_BITS2` writer - Bit to observe for WDT_INT2: 0: Assert after bit0 of WDT_CTR2 toggles (one int every tick) … 31: Assert after bit31 of WDT_CTR2 toggles (one int every 2^31 ticks)"],["WDT_CASCADE0_1_R","Field `WDT_CASCADE0_1` reader - Cascade Watchdog Counters 0,1. Counter 1 increments the cycle after WDT_CTR0=WDT_MATCH0. 0: Independent counters 1: Cascaded counters"],["WDT_CASCADE0_1_W","Field `WDT_CASCADE0_1` writer - Cascade Watchdog Counters 0,1. Counter 1 increments the cycle after WDT_CTR0=WDT_MATCH0. 0: Independent counters 1: Cascaded counters"],["WDT_CASCADE1_2_R","Field `WDT_CASCADE1_2` reader - Cascade Watchdog Counters 1,2. Counter 2 increments the cycle after WDT_CTR1=WDT_MATCH1. It is allowed to cascade all three WDT counters. 0: Independent counters 1: Cascaded counters. When cascading all three counters, WDT_CLEAR1 must be 1."],["WDT_CASCADE1_2_W","Field `WDT_CASCADE1_2` writer - Cascade Watchdog Counters 1,2. Counter 2 increments the cycle after WDT_CTR1=WDT_MATCH1. It is allowed to cascade all three WDT counters. 0: Independent counters 1: Cascaded counters. When cascading all three counters, WDT_CLEAR1 must be 1."],["WDT_CLEAR0_R","Field `WDT_CLEAR0` reader - Clear Watchdog Counter when WDT_CTR0=WDT_MATCH0. In other words WDT_CTR0 divides LFCLK by (WDT_MATCH0+1). 0: Free running counter 1: Clear on match. In this mode, the minimum legal setting of WDT_MATCH0 is 1."],["WDT_CLEAR0_W","Field `WDT_CLEAR0` writer - Clear Watchdog Counter when WDT_CTR0=WDT_MATCH0. In other words WDT_CTR0 divides LFCLK by (WDT_MATCH0+1). 0: Free running counter 1: Clear on match. In this mode, the minimum legal setting of WDT_MATCH0 is 1."],["WDT_CLEAR1_R","Field `WDT_CLEAR1` reader - Clear Watchdog Counter when WDT_CTR1==WDT_MATCH1. In other words WDT_CTR1 divides LFCLK by (WDT_MATCH1+1). 0: Free running counter 1: Clear on match. In this mode, the minimum legal setting of WDT_MATCH1 is 1."],["WDT_CLEAR1_W","Field `WDT_CLEAR1` writer - Clear Watchdog Counter when WDT_CTR1==WDT_MATCH1. In other words WDT_CTR1 divides LFCLK by (WDT_MATCH1+1). 0: Free running counter 1: Clear on match. In this mode, the minimum legal setting of WDT_MATCH1 is 1."],["WDT_MODE0_R","Field `WDT_MODE0` reader - Watchdog Counter Action on Match. Action is taken on the next increment after the values match (WDT_CTR0=WDT_MATCH0)."],["WDT_MODE0_W","Field `WDT_MODE0` writer - Watchdog Counter Action on Match. Action is taken on the next increment after the values match (WDT_CTR0=WDT_MATCH0)."],["WDT_MODE1_R","Field `WDT_MODE1` reader - Watchdog Counter Action on Match. Action is taken on the next increment after the values match (WDT_CTR1=WDT_MATCH1)."],["WDT_MODE1_W","Field `WDT_MODE1` writer - Watchdog Counter Action on Match. Action is taken on the next increment after the values match (WDT_CTR1=WDT_MATCH1)."],["WDT_MODE2_R","Field `WDT_MODE2` reader - Watchdog Counter 2 Mode."],["WDT_MODE2_W","Field `WDT_MODE2` writer - Watchdog Counter 2 Mode."]]});