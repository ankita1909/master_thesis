initSidebarItems({"enum":[["MODE_A","Counter mode."],["QUADRATURE_MODE_A","In QUAD mode selects quadrature encoding mode (X1/X2/X4). In PWM, PWM_DT and PWM_PR modes, these two bits can be used to invert ‘dt_line_out’ and ‘dt_line_compl_out’. Inversion is the last step in generation of ‘dt_line_out’ and ‘dt_line_compl_out’; i.e. a disabled output line ‘dt_line_out’ has the value QUADRATURE_MODE[0] and a disabled output line ‘dt_line_compl_out’ has the value QUADRATURE_MODE[1]."],["UP_DOWN_MODE_A","Determines counter direction."]],"struct":[["AUTO_RELOAD_CC_R","Field `AUTO_RELOAD_CC` reader - Specifies switching of the CC and buffered CC values. This field has a function in TIMER, PWM, PWM_DT and PWM_PR modes. Timer mode: ‘0’: never switch. ‘1’: switch on a compare match event. PWM, PWM_DT, PWM_PR modes: ’0: never switch. ‘1’: switch on a terminal count event with an actively pending switch event."],["AUTO_RELOAD_CC_W","Field `AUTO_RELOAD_CC` writer - Specifies switching of the CC and buffered CC values. This field has a function in TIMER, PWM, PWM_DT and PWM_PR modes. Timer mode: ‘0’: never switch. ‘1’: switch on a compare match event. PWM, PWM_DT, PWM_PR modes: ’0: never switch. ‘1’: switch on a terminal count event with an actively pending switch event."],["AUTO_RELOAD_PERIOD_R","Field `AUTO_RELOAD_PERIOD` reader - Specifies switching of the PERIOD and buffered PERIOD values. This field has a function in PWM, PWM_DT and PWM_PR modes. ‘0’: never switch. ‘1’: switch on a terminal count event with and actively pending switch event."],["AUTO_RELOAD_PERIOD_W","Field `AUTO_RELOAD_PERIOD` writer - Specifies switching of the PERIOD and buffered PERIOD values. This field has a function in PWM, PWM_DT and PWM_PR modes. ‘0’: never switch. ‘1’: switch on a terminal count event with and actively pending switch event."],["CTRL_SPEC","Counter control register"],["GENERIC_R","Field `GENERIC` reader - Generic 8-bit control field. In PWM_DT mode, this field is used to determine the dead time: amount of dead time cycles in the counter clock domain. In all other modes, the lower 3 bits of this field determine pre-scaling of the selected counter clock."],["GENERIC_W","Field `GENERIC` writer - Generic 8-bit control field. In PWM_DT mode, this field is used to determine the dead time: amount of dead time cycles in the counter clock domain. In all other modes, the lower 3 bits of this field determine pre-scaling of the selected counter clock."],["MODE_R","Field `MODE` reader - Counter mode."],["MODE_W","Field `MODE` writer - Counter mode."],["ONE_SHOT_R","Field `ONE_SHOT` reader - When ‘0’, counter runs continuous. When ‘1’, counter is turned off by hardware when a terminal count event is generated."],["ONE_SHOT_W","Field `ONE_SHOT` writer - When ‘0’, counter runs continuous. When ‘1’, counter is turned off by hardware when a terminal count event is generated."],["PWM_STOP_ON_KILL_R","Field `PWM_STOP_ON_KILL` reader - Specifies whether the counter stops on a kill events: ‘0’: kill event does NOT stop counter. ‘1’: kill event stops counter. This field has a function in PWM, PWM_DT and PWM_PR modes only."],["PWM_STOP_ON_KILL_W","Field `PWM_STOP_ON_KILL` writer - Specifies whether the counter stops on a kill events: ‘0’: kill event does NOT stop counter. ‘1’: kill event stops counter. This field has a function in PWM, PWM_DT and PWM_PR modes only."],["PWM_SYNC_KILL_R","Field `PWM_SYNC_KILL` reader - Specifies asynchronous/synchronous kill behavior: ‘1’: synchronous kill mode: the kill event disables the ‘dt_line_out’ and ‘dt_line_compl_out’ signals till the next terminal count event (synchronous kill). In synchronous kill mode, STOP_EDGE should be RISING_EDGE. ‘0’: asynchronous kill mode: the kill event only disables the ‘dt_line_out’ and ‘dt_line_compl_out’ signals when present. In asynchronous kill mode, STOP_EDGE should be NO_EDGE_DET. This field has a function in PWM and PWM_DT modes only. This field is only used when PWM_STOP_ON_KILL is ‘0’."],["PWM_SYNC_KILL_W","Field `PWM_SYNC_KILL` writer - Specifies asynchronous/synchronous kill behavior: ‘1’: synchronous kill mode: the kill event disables the ‘dt_line_out’ and ‘dt_line_compl_out’ signals till the next terminal count event (synchronous kill). In synchronous kill mode, STOP_EDGE should be RISING_EDGE. ‘0’: asynchronous kill mode: the kill event only disables the ‘dt_line_out’ and ‘dt_line_compl_out’ signals when present. In asynchronous kill mode, STOP_EDGE should be NO_EDGE_DET. This field has a function in PWM and PWM_DT modes only. This field is only used when PWM_STOP_ON_KILL is ‘0’."],["QUADRATURE_MODE_R","Field `QUADRATURE_MODE` reader - In QUAD mode selects quadrature encoding mode (X1/X2/X4). In PWM, PWM_DT and PWM_PR modes, these two bits can be used to invert ‘dt_line_out’ and ‘dt_line_compl_out’. Inversion is the last step in generation of ‘dt_line_out’ and ‘dt_line_compl_out’; i.e. a disabled output line ‘dt_line_out’ has the value QUADRATURE_MODE[0] and a disabled output line ‘dt_line_compl_out’ has the value QUADRATURE_MODE[1]."],["QUADRATURE_MODE_W","Field `QUADRATURE_MODE` writer - In QUAD mode selects quadrature encoding mode (X1/X2/X4). In PWM, PWM_DT and PWM_PR modes, these two bits can be used to invert ‘dt_line_out’ and ‘dt_line_compl_out’. Inversion is the last step in generation of ‘dt_line_out’ and ‘dt_line_compl_out’; i.e. a disabled output line ‘dt_line_out’ has the value QUADRATURE_MODE[0] and a disabled output line ‘dt_line_compl_out’ has the value QUADRATURE_MODE[1]."],["R","Register `CTRL` reader"],["UP_DOWN_MODE_R","Field `UP_DOWN_MODE` reader - Determines counter direction."],["UP_DOWN_MODE_W","Field `UP_DOWN_MODE` writer - Determines counter direction."],["W","Register `CTRL` writer"]]});