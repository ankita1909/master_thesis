initSidebarItems({"struct":[["BLOCKED_R","Field `BLOCKED` reader - AHB-Lite write transfer can not get access to the EZ memory (EZ data access), due to an externally clocked EZ access. This may happen when STATUS.EC_BUSY is ‘1’."],["BLOCKED_W","Field `BLOCKED` writer - AHB-Lite write transfer can not get access to the EZ memory (EZ data access), due to an externally clocked EZ access. This may happen when STATUS.EC_BUSY is ‘1’."],["EMPTY_R","Field `EMPTY` reader - TX FIFO is empty; i.e. it has 0 entries. Only used in FIFO mode."],["EMPTY_W","Field `EMPTY` writer - TX FIFO is empty; i.e. it has 0 entries. Only used in FIFO mode."],["INTR_TX_SPEC","Transmitter interrupt request"],["NOT_FULL_R","Field `NOT_FULL` reader - TX FIFO is not full. Dependent on CTRL.BYTE_MODE: (FF_DATA_NR = EZ_DATA_NR/2) BYTE_MODE is ‘0’: # entries != FF_DATA_NR/2. BYTE_MODE is ‘1’: # entries != FF_DATA_NR. Only used in FIFO mode."],["NOT_FULL_W","Field `NOT_FULL` writer - TX FIFO is not full. Dependent on CTRL.BYTE_MODE: (FF_DATA_NR = EZ_DATA_NR/2) BYTE_MODE is ‘0’: # entries != FF_DATA_NR/2. BYTE_MODE is ‘1’: # entries != FF_DATA_NR. Only used in FIFO mode."],["OVERFLOW_R","Field `OVERFLOW` reader - Attempt to write to a full TX FIFO. Only used in FIFO mode."],["OVERFLOW_W","Field `OVERFLOW` writer - Attempt to write to a full TX FIFO. Only used in FIFO mode."],["R","Register `INTR_TX` reader"],["TRIGGER_R","Field `TRIGGER` reader - Less entries in the TX FIFO than the value specified by TX_FIFO_CTRL.TRIGGER_LEVEL. Only used in FIFO mode."],["TRIGGER_W","Field `TRIGGER` writer - Less entries in the TX FIFO than the value specified by TX_FIFO_CTRL.TRIGGER_LEVEL. Only used in FIFO mode."],["UART_ARB_LOST_R","Field `UART_ARB_LOST` reader - UART lost arbitration: the value driven on the TX line is not the same as the value observed on the RX line. This condition event is useful when transmitter and receiver share a TX/RX line. This is the case in LIN or SmartCard modes. Set to ‘1’, when event is detected. Write with ‘1’ to clear bit."],["UART_ARB_LOST_W","Field `UART_ARB_LOST` writer - UART lost arbitration: the value driven on the TX line is not the same as the value observed on the RX line. This condition event is useful when transmitter and receiver share a TX/RX line. This is the case in LIN or SmartCard modes. Set to ‘1’, when event is detected. Write with ‘1’ to clear bit."],["UART_DONE_R","Field `UART_DONE` reader - UART transmitter done event. This happens when the IP is done transferring all data in the TX FIFO, and the last stop field is transmitted (both TX FIFO and transmit shifter register are empty). Set to ‘1’, when event is detected. Write with ‘1’ to clear bit."],["UART_DONE_W","Field `UART_DONE` writer - UART transmitter done event. This happens when the IP is done transferring all data in the TX FIFO, and the last stop field is transmitted (both TX FIFO and transmit shifter register are empty). Set to ‘1’, when event is detected. Write with ‘1’ to clear bit."],["UART_NACK_R","Field `UART_NACK` reader - UART transmitter received a negative acknowledgement in SmartCard mode. Set to ‘1’, when event is detected. Write with ‘1’ to clear bit."],["UART_NACK_W","Field `UART_NACK` writer - UART transmitter received a negative acknowledgement in SmartCard mode. Set to ‘1’, when event is detected. Write with ‘1’ to clear bit."],["UNDERFLOW_R","Field `UNDERFLOW` reader - Attempt to read from an empty TX FIFO. This happens when the IP is ready to transfer data and EMPTY is ‘1’. Only used in FIFO mode."],["UNDERFLOW_W","Field `UNDERFLOW` writer - Attempt to read from an empty TX FIFO. This happens when the IP is ready to transfer data and EMPTY is ‘1’. Only used in FIFO mode."],["W","Register `INTR_TX` writer"]]});