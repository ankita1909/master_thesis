initSidebarItems({"mod":[["adc_ctl","ADC Control"],["adc_res","ADC measurement"],["ambuf","Reference Generator configuration"],["config","Configuration and Control"],["csdcmp","CSD Comparator configuration"],["hscmp","High Speed Comparator configuration"],["idaca","IDACA Configuration"],["idacb","IDACB Configuration"],["intr","CSD Interrupt Request Register"],["intr_mask","CSD Interrupt mask register"],["intr_masked","CSD Interrupt masked register"],["intr_set","CSD Interrupt set register"],["io_sel","IO output control Waveform selection"],["refgen","Reference Generator configuration"],["result_val1","Result CSD/CSX accumulation counter value 1"],["result_val2","Result CSX accumulation counter value 2"],["sense_duty","Sense clock duty cycle"],["sense_period","Sense clock period"],["seq_init_cnt","Sequencer Initial conversion and sample counts"],["seq_norm_cnt","Sequencer Normal conversion and sample counts"],["seq_start","Sequencer start"],["seq_time","Sequencer Timing"],["spare","Spare MMIO"],["stat_cnts","Current status counts"],["stat_hcnt","Current count of the HSCMP counter"],["stat_seq","Current Sequencer status"],["status","Status Register"],["sw_amuxbuf_sel","Amuxbuffer switches Waveform selection"],["sw_byp_sel","AMUXBUS bypass switches Waveform selection"],["sw_cmp_n_sel","CSDCMP Neg Switch Waveform selection"],["sw_cmp_p_sel","CSDCMP Pos Switch Waveform selection"],["sw_dsi_sel","DSI output switch control Waveform selection"],["sw_fw_mod_sel","Full Wave Cmod Switch Waveform selection"],["sw_fw_tank_sel","Full Wave Csh_tank Switch Waveform selection"],["sw_hs_n_sel","HSCMP Neg input switch Waveform selection"],["sw_hs_p_sel","HSCMP Pos input switch Waveform selection"],["sw_refgen_sel","Reference Generator Switch Waveform selection"],["sw_res","Switch Resistance configuration"],["sw_shield_sel","Shielding switches Waveform selection"]],"struct":[["RegisterBlock","Register block"]],"type":[["ADC_CTL","ADC_CTL register accessor: an alias for `Reg<ADC_CTL_SPEC>`"],["ADC_RES","ADC_RES register accessor: an alias for `Reg<ADC_RES_SPEC>`"],["AMBUF","AMBUF register accessor: an alias for `Reg<AMBUF_SPEC>`"],["CONFIG","CONFIG register accessor: an alias for `Reg<CONFIG_SPEC>`"],["CSDCMP","CSDCMP register accessor: an alias for `Reg<CSDCMP_SPEC>`"],["HSCMP","HSCMP register accessor: an alias for `Reg<HSCMP_SPEC>`"],["IDACA","IDACA register accessor: an alias for `Reg<IDACA_SPEC>`"],["IDACB","IDACB register accessor: an alias for `Reg<IDACB_SPEC>`"],["INTR","INTR register accessor: an alias for `Reg<INTR_SPEC>`"],["INTR_MASK","INTR_MASK register accessor: an alias for `Reg<INTR_MASK_SPEC>`"],["INTR_MASKED","INTR_MASKED register accessor: an alias for `Reg<INTR_MASKED_SPEC>`"],["INTR_SET","INTR_SET register accessor: an alias for `Reg<INTR_SET_SPEC>`"],["IO_SEL","IO_SEL register accessor: an alias for `Reg<IO_SEL_SPEC>`"],["REFGEN","REFGEN register accessor: an alias for `Reg<REFGEN_SPEC>`"],["RESULT_VAL1","RESULT_VAL1 register accessor: an alias for `Reg<RESULT_VAL1_SPEC>`"],["RESULT_VAL2","RESULT_VAL2 register accessor: an alias for `Reg<RESULT_VAL2_SPEC>`"],["SENSE_DUTY","SENSE_DUTY register accessor: an alias for `Reg<SENSE_DUTY_SPEC>`"],["SENSE_PERIOD","SENSE_PERIOD register accessor: an alias for `Reg<SENSE_PERIOD_SPEC>`"],["SEQ_INIT_CNT","SEQ_INIT_CNT register accessor: an alias for `Reg<SEQ_INIT_CNT_SPEC>`"],["SEQ_NORM_CNT","SEQ_NORM_CNT register accessor: an alias for `Reg<SEQ_NORM_CNT_SPEC>`"],["SEQ_START","SEQ_START register accessor: an alias for `Reg<SEQ_START_SPEC>`"],["SEQ_TIME","SEQ_TIME register accessor: an alias for `Reg<SEQ_TIME_SPEC>`"],["SPARE","SPARE register accessor: an alias for `Reg<SPARE_SPEC>`"],["STATUS","STATUS register accessor: an alias for `Reg<STATUS_SPEC>`"],["STAT_CNTS","STAT_CNTS register accessor: an alias for `Reg<STAT_CNTS_SPEC>`"],["STAT_HCNT","STAT_HCNT register accessor: an alias for `Reg<STAT_HCNT_SPEC>`"],["STAT_SEQ","STAT_SEQ register accessor: an alias for `Reg<STAT_SEQ_SPEC>`"],["SW_AMUXBUF_SEL","SW_AMUXBUF_SEL register accessor: an alias for `Reg<SW_AMUXBUF_SEL_SPEC>`"],["SW_BYP_SEL","SW_BYP_SEL register accessor: an alias for `Reg<SW_BYP_SEL_SPEC>`"],["SW_CMP_N_SEL","SW_CMP_N_SEL register accessor: an alias for `Reg<SW_CMP_N_SEL_SPEC>`"],["SW_CMP_P_SEL","SW_CMP_P_SEL register accessor: an alias for `Reg<SW_CMP_P_SEL_SPEC>`"],["SW_DSI_SEL","SW_DSI_SEL register accessor: an alias for `Reg<SW_DSI_SEL_SPEC>`"],["SW_FW_MOD_SEL","SW_FW_MOD_SEL register accessor: an alias for `Reg<SW_FW_MOD_SEL_SPEC>`"],["SW_FW_TANK_SEL","SW_FW_TANK_SEL register accessor: an alias for `Reg<SW_FW_TANK_SEL_SPEC>`"],["SW_HS_N_SEL","SW_HS_N_SEL register accessor: an alias for `Reg<SW_HS_N_SEL_SPEC>`"],["SW_HS_P_SEL","SW_HS_P_SEL register accessor: an alias for `Reg<SW_HS_P_SEL_SPEC>`"],["SW_REFGEN_SEL","SW_REFGEN_SEL register accessor: an alias for `Reg<SW_REFGEN_SEL_SPEC>`"],["SW_RES","SW_RES register accessor: an alias for `Reg<SW_RES_SPEC>`"],["SW_SHIELD_SEL","SW_SHIELD_SEL register accessor: an alias for `Reg<SW_SHIELD_SEL_SPEC>`"]]});