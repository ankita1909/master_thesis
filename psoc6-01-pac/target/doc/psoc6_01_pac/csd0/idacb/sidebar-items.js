initSidebarItems({"enum":[["BAL_MODE_A","same as corresponding IDACA Balancing mode"],["LEG1_MODE_A","Controls the usage mode of LEG1 and the Polarity bit"],["LEG2_MODE_A","Controls the usage mode of LEG2"],["POLARITY_A","Selects the polarity of the IDAC (sensing operation). Normally the actual polarity depends on this bit, optionally mixed with DSI (see DSI_CTRL_EN) and if LEG1_EN==1 and LEG1_MODE==CSD also mixed with the CSD configuration and operation. In mutual cap mode however (see config.mutual_cap) the polarity of the IDAC is controlled by csd_sense. If LEG3_EN=1 (the other two legs must be off) then the ADC sequencer controls the IDACB polarity, optionally mixed with DSI."],["POL_DYN_A","Polarity is dynamic, this bit does not influence the logic in the SoftIP, it only goes to the HardIP."],["RANGE_A","IDAC multiplier"]],"struct":[["BAL_MODE_R","Field `BAL_MODE` reader - same as corresponding IDACA Balancing mode"],["BAL_MODE_W","Field `BAL_MODE` writer - same as corresponding IDACA Balancing mode"],["DSI_CTRL_EN_R","Field `DSI_CTRL_EN` reader - Mix DSI inputs with MMIO controls or not (before getting mixed with CSD controls if enabled) 0: no DSI control IDACB_POLARITY = IDACB.POLARITY IDACB_LEG1_EN = IDACB.LEG1_EN IDACB_LEG2_EN = IDACB.LEG2_EN IDACB_LEG3_EN = IDACB.LEG3_EN 1: Mix MMIO with DSI control IDACB_POLARITY = IDACB.POLARITY EXOR dsi_idacb_pol IDACB_LEG1_EN = IDACB.LEG1_EN AND dsi_idacb_leg1_en IDACB_LEG2_EN = IDACB.LEG2_EN AND dsi_idacb_leg2_en IDACB_LEG3_EN = IDACB.LEG3_EN AND dsi_idacb_leg3_en"],["DSI_CTRL_EN_W","Field `DSI_CTRL_EN` writer - Mix DSI inputs with MMIO controls or not (before getting mixed with CSD controls if enabled) 0: no DSI control IDACB_POLARITY = IDACB.POLARITY IDACB_LEG1_EN = IDACB.LEG1_EN IDACB_LEG2_EN = IDACB.LEG2_EN IDACB_LEG3_EN = IDACB.LEG3_EN 1: Mix MMIO with DSI control IDACB_POLARITY = IDACB.POLARITY EXOR dsi_idacb_pol IDACB_LEG1_EN = IDACB.LEG1_EN AND dsi_idacb_leg1_en IDACB_LEG2_EN = IDACB.LEG2_EN AND dsi_idacb_leg2_en IDACB_LEG3_EN = IDACB.LEG3_EN AND dsi_idacb_leg3_en"],["IDACB_SPEC","IDACB Configuration"],["LEG1_EN_R","Field `LEG1_EN` reader - output enable for leg 1 to CSDBUSB or CSDBUSA"],["LEG1_EN_W","Field `LEG1_EN` writer - output enable for leg 1 to CSDBUSB or CSDBUSA"],["LEG1_MODE_R","Field `LEG1_MODE` reader - Controls the usage mode of LEG1 and the Polarity bit"],["LEG1_MODE_W","Field `LEG1_MODE` writer - Controls the usage mode of LEG1 and the Polarity bit"],["LEG2_EN_R","Field `LEG2_EN` reader - output enable for leg 2 to CSDBUSB or CSDBUSA"],["LEG2_EN_W","Field `LEG2_EN` writer - output enable for leg 2 to CSDBUSB or CSDBUSA"],["LEG2_MODE_R","Field `LEG2_MODE` reader - Controls the usage mode of LEG2"],["LEG2_MODE_W","Field `LEG2_MODE` writer - Controls the usage mode of LEG2"],["LEG3_EN_R","Field `LEG3_EN` reader - output enable for leg3 to CSDBUSC, only allowed when RANGE = IDAC_LO. When this bit is set both other legs should be off. Note that leg3 can only be used for ADC mode, not GP mode. Which means that leg3 can only be on when the ADC Sequencer is in the ADC_measure or Calib_measure state. In those states leg3 is controlled by the ADC configuration and the HSCMP output. In addition this leg3 enable bit can optionally be mixed with DSI (see DSI_CTRL_EN). When LEG3_EN=1 also the IDACB polarity is controlled by the ADC sequencer."],["LEG3_EN_W","Field `LEG3_EN` writer - output enable for leg3 to CSDBUSC, only allowed when RANGE = IDAC_LO. When this bit is set both other legs should be off. Note that leg3 can only be used for ADC mode, not GP mode. Which means that leg3 can only be on when the ADC Sequencer is in the ADC_measure or Calib_measure state. In those states leg3 is controlled by the ADC configuration and the HSCMP output. In addition this leg3 enable bit can optionally be mixed with DSI (see DSI_CTRL_EN). When LEG3_EN=1 also the IDACB polarity is controlled by the ADC sequencer."],["POLARITY_R","Field `POLARITY` reader - Selects the polarity of the IDAC (sensing operation). Normally the actual polarity depends on this bit, optionally mixed with DSI (see DSI_CTRL_EN) and if LEG1_EN==1 and LEG1_MODE==CSD also mixed with the CSD configuration and operation. In mutual cap mode however (see config.mutual_cap) the polarity of the IDAC is controlled by csd_sense. If LEG3_EN=1 (the other two legs must be off) then the ADC sequencer controls the IDACB polarity, optionally mixed with DSI."],["POLARITY_W","Field `POLARITY` writer - Selects the polarity of the IDAC (sensing operation). Normally the actual polarity depends on this bit, optionally mixed with DSI (see DSI_CTRL_EN) and if LEG1_EN==1 and LEG1_MODE==CSD also mixed with the CSD configuration and operation. In mutual cap mode however (see config.mutual_cap) the polarity of the IDAC is controlled by csd_sense. If LEG3_EN=1 (the other two legs must be off) then the ADC sequencer controls the IDACB polarity, optionally mixed with DSI."],["POL_DYN_R","Field `POL_DYN` reader - Polarity is dynamic, this bit does not influence the logic in the SoftIP, it only goes to the HardIP."],["POL_DYN_W","Field `POL_DYN` writer - Polarity is dynamic, this bit does not influence the logic in the SoftIP, it only goes to the HardIP."],["R","Register `IDACB` reader"],["RANGE_R","Field `RANGE` reader - IDAC multiplier"],["RANGE_W","Field `RANGE` writer - IDAC multiplier"],["VAL_R","Field `VAL` reader - Current value setting for this IDAC (7 bits)."],["VAL_W","Field `VAL` writer - Current value setting for this IDAC (7 bits)."],["W","Register `IDACB` writer"]]});