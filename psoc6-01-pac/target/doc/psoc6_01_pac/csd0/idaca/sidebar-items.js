initSidebarItems({"enum":[["BAL_MODE_A","Balancing mode: only applies to legs configured as CSD."],["LEG1_MODE_A","Controls the usage mode of LEG1 and the Polarity bit"],["LEG2_MODE_A","Controls the usage mode of LEG2"],["POLARITY_A","Selects the polarity of the IDAC (sensing operation). Normally the actual polarity depends on this bit, optionally mixed with DSI (see DSI_CTRL_EN) and if LEG1_MODE==CSD also mixed with the CSD configuration and operation. However in mutual cap mode with one IDAC (config.mutual_cap=1 & config.csx_dual_idac=0) the polarity of the IDAC is controlled by csd_sense."],["POL_DYN_A","Polarity is dynamic, this bit does not influence the logic in the SoftIP, it only goes to the HardIP."],["RANGE_A","IDAC multiplier"]],"struct":[["BAL_MODE_R","Field `BAL_MODE` reader - Balancing mode: only applies to legs configured as CSD."],["BAL_MODE_W","Field `BAL_MODE` writer - Balancing mode: only applies to legs configured as CSD."],["DSI_CTRL_EN_R","Field `DSI_CTRL_EN` reader - Mix DSI inputs with MMIO controls or not (before getting mixed with CSD controls if enabled). 0: no DSI control IDACA_POLARITY = IDACA.POLARITY IDACA_LEG1_EN = IDACA.LEG1_EN IDACA_LEG2_EN = IDACA.LEG2_EN 1: Mix MMIO with DSI control IDACA_POLARITY = IDACA.POLARITY EXOR dsi_idaca_pol IDACA_LEG1_EN = IDACA.LEG1_EN AND dsi_idaca_leg1_en IDACA_LEG2_EN = IDACA.LEG2_EN AND dsi_idaca_leg2_en"],["DSI_CTRL_EN_W","Field `DSI_CTRL_EN` writer - Mix DSI inputs with MMIO controls or not (before getting mixed with CSD controls if enabled). 0: no DSI control IDACA_POLARITY = IDACA.POLARITY IDACA_LEG1_EN = IDACA.LEG1_EN IDACA_LEG2_EN = IDACA.LEG2_EN 1: Mix MMIO with DSI control IDACA_POLARITY = IDACA.POLARITY EXOR dsi_idaca_pol IDACA_LEG1_EN = IDACA.LEG1_EN AND dsi_idaca_leg1_en IDACA_LEG2_EN = IDACA.LEG2_EN AND dsi_idaca_leg2_en"],["IDACA_SPEC","IDACA Configuration"],["LEG1_EN_R","Field `LEG1_EN` reader - output enable for leg 1 to CSDBUSA"],["LEG1_EN_W","Field `LEG1_EN` writer - output enable for leg 1 to CSDBUSA"],["LEG1_MODE_R","Field `LEG1_MODE` reader - Controls the usage mode of LEG1 and the Polarity bit"],["LEG1_MODE_W","Field `LEG1_MODE` writer - Controls the usage mode of LEG1 and the Polarity bit"],["LEG2_EN_R","Field `LEG2_EN` reader - output enable for leg 2 to CSDBUSA"],["LEG2_EN_W","Field `LEG2_EN` writer - output enable for leg 2 to CSDBUSA"],["LEG2_MODE_R","Field `LEG2_MODE` reader - Controls the usage mode of LEG2"],["LEG2_MODE_W","Field `LEG2_MODE` writer - Controls the usage mode of LEG2"],["POLARITY_R","Field `POLARITY` reader - Selects the polarity of the IDAC (sensing operation). Normally the actual polarity depends on this bit, optionally mixed with DSI (see DSI_CTRL_EN) and if LEG1_MODE==CSD also mixed with the CSD configuration and operation. However in mutual cap mode with one IDAC (config.mutual_cap=1 & config.csx_dual_idac=0) the polarity of the IDAC is controlled by csd_sense."],["POLARITY_W","Field `POLARITY` writer - Selects the polarity of the IDAC (sensing operation). Normally the actual polarity depends on this bit, optionally mixed with DSI (see DSI_CTRL_EN) and if LEG1_MODE==CSD also mixed with the CSD configuration and operation. However in mutual cap mode with one IDAC (config.mutual_cap=1 & config.csx_dual_idac=0) the polarity of the IDAC is controlled by csd_sense."],["POL_DYN_R","Field `POL_DYN` reader - Polarity is dynamic, this bit does not influence the logic in the SoftIP, it only goes to the HardIP."],["POL_DYN_W","Field `POL_DYN` writer - Polarity is dynamic, this bit does not influence the logic in the SoftIP, it only goes to the HardIP."],["R","Register `IDACA` reader"],["RANGE_R","Field `RANGE` reader - IDAC multiplier"],["RANGE_W","Field `RANGE` writer - IDAC multiplier"],["VAL_R","Field `VAL` reader - Current value setting for this IDAC (7 bits)."],["VAL_W","Field `VAL` writer - Current value setting for this IDAC (7 bits)."],["W","Register `IDACA` writer"]]});