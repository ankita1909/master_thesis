initSidebarItems({"struct":[["ADMA_ERR_SIGNAL_EN_R","Field `ADMA_ERR_SIGNAL_EN` reader - ADMA Error Signal Enable Values: - 0x0 (FALSE): Masked - 0x1 (TRUE): Enabled"],["ADMA_ERR_SIGNAL_EN_W","Field `ADMA_ERR_SIGNAL_EN` writer - ADMA Error Signal Enable Values: - 0x0 (FALSE): Masked - 0x1 (TRUE): Enabled"],["AUTO_CMD_ERR_SIGNAL_EN_R","Field `AUTO_CMD_ERR_SIGNAL_EN` reader - Auto CMD Error Signal Enable (SD/eMMC Mode only) Values: - 0x0 (FALSE): Masked - 0x1 (TRUE): Enabled"],["AUTO_CMD_ERR_SIGNAL_EN_W","Field `AUTO_CMD_ERR_SIGNAL_EN` writer - Auto CMD Error Signal Enable (SD/eMMC Mode only) Values: - 0x0 (FALSE): Masked - 0x1 (TRUE): Enabled"],["BOOT_ACK_ERR_SIGNAL_EN_R","Field `BOOT_ACK_ERR_SIGNAL_EN` reader - Boot Acknowledgment Error (eMMC Mode only). Setting this bit to 1 enables generating interrupt signal when Boot Acknowledgement Error in Error Interrupt Status register is set. Values: - 0x0 (FALSE): Masked - 0x1 (TRUE): Enabled"],["BOOT_ACK_ERR_SIGNAL_EN_W","Field `BOOT_ACK_ERR_SIGNAL_EN` writer - Boot Acknowledgment Error (eMMC Mode only). Setting this bit to 1 enables generating interrupt signal when Boot Acknowledgement Error in Error Interrupt Status register is set. Values: - 0x0 (FALSE): Masked - 0x1 (TRUE): Enabled"],["CMD_CRC_ERR_SIGNAL_EN_R","Field `CMD_CRC_ERR_SIGNAL_EN` reader - Command CRC Error Signal Enable (SD/eMMC Mode only) Values: - 0x0 (FALSE): Masked - 0x1 (TRUE): Enabled"],["CMD_CRC_ERR_SIGNAL_EN_W","Field `CMD_CRC_ERR_SIGNAL_EN` writer - Command CRC Error Signal Enable (SD/eMMC Mode only) Values: - 0x0 (FALSE): Masked - 0x1 (TRUE): Enabled"],["CMD_END_BIT_ERR_SIGNAL_EN_R","Field `CMD_END_BIT_ERR_SIGNAL_EN` reader - Command End Bit Error Signal Enable (SD/eMMC Mode only) Values: - 0x0 (FALSE): Masked - 0x1 (TRUE): Enabled"],["CMD_END_BIT_ERR_SIGNAL_EN_W","Field `CMD_END_BIT_ERR_SIGNAL_EN` writer - Command End Bit Error Signal Enable (SD/eMMC Mode only) Values: - 0x0 (FALSE): Masked - 0x1 (TRUE): Enabled"],["CMD_IDX_ERR_SIGNAL_EN_R","Field `CMD_IDX_ERR_SIGNAL_EN` reader - Command Index Error Signal Enable (SD/eMMC Mode only) Values: - 0x0 (FALSE): No error - 0x1 (TRUE): Error"],["CMD_IDX_ERR_SIGNAL_EN_W","Field `CMD_IDX_ERR_SIGNAL_EN` writer - Command Index Error Signal Enable (SD/eMMC Mode only) Values: - 0x0 (FALSE): No error - 0x1 (TRUE): Error"],["CMD_TOUT_ERR_SIGNAL_EN_R","Field `CMD_TOUT_ERR_SIGNAL_EN` reader - Command Timeout Error Signal Enable (SD/eMMC Mode only) Values: - 0x0 (FALSE): Masked - 0x1 (TRUE): Enabled"],["CMD_TOUT_ERR_SIGNAL_EN_W","Field `CMD_TOUT_ERR_SIGNAL_EN` writer - Command Timeout Error Signal Enable (SD/eMMC Mode only) Values: - 0x0 (FALSE): Masked - 0x1 (TRUE): Enabled"],["CUR_LMT_ERR_SIGNAL_EN_R","Field `CUR_LMT_ERR_SIGNAL_EN` reader - Current Limit Error Signal Enable Values: - 0x0 (FALSE): Masked - 0x1 (TRUE): Enabled"],["CUR_LMT_ERR_SIGNAL_EN_W","Field `CUR_LMT_ERR_SIGNAL_EN` writer - Current Limit Error Signal Enable Values: - 0x0 (FALSE): Masked - 0x1 (TRUE): Enabled"],["DATA_CRC_ERR_SIGNAL_EN_R","Field `DATA_CRC_ERR_SIGNAL_EN` reader - Data CRC Error Signal Enable (SD/eMMC Mode only) Values: - 0x0 (FALSE): Masked - 0x1 (TRUE): Enabled"],["DATA_CRC_ERR_SIGNAL_EN_W","Field `DATA_CRC_ERR_SIGNAL_EN` writer - Data CRC Error Signal Enable (SD/eMMC Mode only) Values: - 0x0 (FALSE): Masked - 0x1 (TRUE): Enabled"],["DATA_END_BIT_ERR_SIGNAL_EN_R","Field `DATA_END_BIT_ERR_SIGNAL_EN` reader - Data End Bit Error Signal Enable (SD/eMMC Mode only) Values: - 0x0 (FALSE): Masked - 0x1 (TRUE): Enabled"],["DATA_END_BIT_ERR_SIGNAL_EN_W","Field `DATA_END_BIT_ERR_SIGNAL_EN` writer - Data End Bit Error Signal Enable (SD/eMMC Mode only) Values: - 0x0 (FALSE): Masked - 0x1 (TRUE): Enabled"],["DATA_TOUT_ERR_SIGNAL_EN_R","Field `DATA_TOUT_ERR_SIGNAL_EN` reader - Data Timeout Error Signal Enable (SD/eMMC Mode only) Values: - 0x0 (FALSE): Masked - 0x1 (TRUE): Enabled"],["DATA_TOUT_ERR_SIGNAL_EN_W","Field `DATA_TOUT_ERR_SIGNAL_EN` writer - Data Timeout Error Signal Enable (SD/eMMC Mode only) Values: - 0x0 (FALSE): Masked - 0x1 (TRUE): Enabled"],["ERROR_INT_SIGNAL_EN_R_SPEC","Error Interrupt Signal Enable Register"],["R","Register `ERROR_INT_SIGNAL_EN_R` reader"],["RESP_ERR_SIGNAL_EN_R","Field `RESP_ERR_SIGNAL_EN` reader - Response Error Signal Enable (SD Mode only) Values: - 0x0 (FALSE): Masked - 0x1 (TRUE): Enabled"],["RESP_ERR_SIGNAL_EN_W","Field `RESP_ERR_SIGNAL_EN` writer - Response Error Signal Enable (SD Mode only) Values: - 0x0 (FALSE): Masked - 0x1 (TRUE): Enabled"],["TUNING_ERR_SIGNAL_EN_R","Field `TUNING_ERR_SIGNAL_EN` reader - N/A"],["TUNING_ERR_SIGNAL_EN_W","Field `TUNING_ERR_SIGNAL_EN` writer - N/A"],["VENDOR_ERR_SIGNAL_EN1_R","Field `VENDOR_ERR_SIGNAL_EN1` reader - N/A"],["VENDOR_ERR_SIGNAL_EN1_W","Field `VENDOR_ERR_SIGNAL_EN1` writer - N/A"],["VENDOR_ERR_SIGNAL_EN2_R","Field `VENDOR_ERR_SIGNAL_EN2` reader - N/A"],["VENDOR_ERR_SIGNAL_EN2_W","Field `VENDOR_ERR_SIGNAL_EN2` writer - N/A"],["VENDOR_ERR_SIGNAL_EN3_R","Field `VENDOR_ERR_SIGNAL_EN3` reader - N/A"],["VENDOR_ERR_SIGNAL_EN3_W","Field `VENDOR_ERR_SIGNAL_EN3` writer - N/A"],["W","Register `ERROR_INT_SIGNAL_EN_R` writer"]]});