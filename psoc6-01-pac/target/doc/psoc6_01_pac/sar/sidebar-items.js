initSidebarItems({"mod":[["ana_trim0","Analog trim register."],["ana_trim1","Analog trim register."],["avg_stat","Current averaging status (for debug)"],["chan_config","Channel configuration register."],["chan_en","Enable bits for the channels"],["chan_result","Channel result data register"],["chan_result_newvalue","Channel result data register ‘new value’ bits"],["chan_result_updated","Channel result data register ‘updated’ bits"],["chan_work","Channel working data register"],["chan_work_newvalue","Channel working data register ‘new value’ bits"],["chan_work_updated","Channel working data register ‘updated’ bits"],["ctrl","Analog control register."],["inj_chan_config","Injection channel configuration register."],["inj_result","Injection channel result register"],["intr","Interrupt request register."],["intr_cause","Interrupt cause register"],["intr_mask","Interrupt mask register."],["intr_masked","Interrupt masked request register"],["intr_set","Interrupt set request register"],["mux_switch0","SARMUX Firmware switch controls"],["mux_switch_clear0","SARMUX Firmware switch control clear"],["mux_switch_ds_ctrl","SARMUX switch DSI control"],["mux_switch_sq_ctrl","SARMUX switch Sar Sequencer control"],["mux_switch_status","SARMUX switch status"],["range_cond","Global range detect mode register."],["range_intr","Range detect interrupt request register."],["range_intr_mask","Range detect interrupt mask register."],["range_intr_masked","Range interrupt masked request register"],["range_intr_set","Range detect interrupt set request register"],["range_thres","Global range detect threshold register."],["sample_ctrl","Sample control register."],["sample_time01","Sample time specification ST0 and ST1"],["sample_time23","Sample time specification ST2 and ST3"],["saturate_intr","Saturate interrupt request register."],["saturate_intr_mask","Saturate interrupt mask register."],["saturate_intr_masked","Saturate interrupt masked request register"],["saturate_intr_set","Saturate interrupt set request register"],["start_ctrl","Start control register (firmware trigger)."],["status","Current status of internal SAR registers (mostly for debug)"]],"struct":[["RegisterBlock","Register block"]],"type":[["ANA_TRIM0","ANA_TRIM0 register accessor: an alias for `Reg<ANA_TRIM0_SPEC>`"],["ANA_TRIM1","ANA_TRIM1 register accessor: an alias for `Reg<ANA_TRIM1_SPEC>`"],["AVG_STAT","AVG_STAT register accessor: an alias for `Reg<AVG_STAT_SPEC>`"],["CHAN_CONFIG","CHAN_CONFIG register accessor: an alias for `Reg<CHAN_CONFIG_SPEC>`"],["CHAN_EN","CHAN_EN register accessor: an alias for `Reg<CHAN_EN_SPEC>`"],["CHAN_RESULT","CHAN_RESULT register accessor: an alias for `Reg<CHAN_RESULT_SPEC>`"],["CHAN_RESULT_NEWVALUE","CHAN_RESULT_NEWVALUE register accessor: an alias for `Reg<CHAN_RESULT_NEWVALUE_SPEC>`"],["CHAN_RESULT_UPDATED","CHAN_RESULT_UPDATED register accessor: an alias for `Reg<CHAN_RESULT_UPDATED_SPEC>`"],["CHAN_WORK","CHAN_WORK register accessor: an alias for `Reg<CHAN_WORK_SPEC>`"],["CHAN_WORK_NEWVALUE","CHAN_WORK_NEWVALUE register accessor: an alias for `Reg<CHAN_WORK_NEWVALUE_SPEC>`"],["CHAN_WORK_UPDATED","CHAN_WORK_UPDATED register accessor: an alias for `Reg<CHAN_WORK_UPDATED_SPEC>`"],["CTRL","CTRL register accessor: an alias for `Reg<CTRL_SPEC>`"],["INJ_CHAN_CONFIG","INJ_CHAN_CONFIG register accessor: an alias for `Reg<INJ_CHAN_CONFIG_SPEC>`"],["INJ_RESULT","INJ_RESULT register accessor: an alias for `Reg<INJ_RESULT_SPEC>`"],["INTR","INTR register accessor: an alias for `Reg<INTR_SPEC>`"],["INTR_CAUSE","INTR_CAUSE register accessor: an alias for `Reg<INTR_CAUSE_SPEC>`"],["INTR_MASK","INTR_MASK register accessor: an alias for `Reg<INTR_MASK_SPEC>`"],["INTR_MASKED","INTR_MASKED register accessor: an alias for `Reg<INTR_MASKED_SPEC>`"],["INTR_SET","INTR_SET register accessor: an alias for `Reg<INTR_SET_SPEC>`"],["MUX_SWITCH0","MUX_SWITCH0 register accessor: an alias for `Reg<MUX_SWITCH0_SPEC>`"],["MUX_SWITCH_CLEAR0","MUX_SWITCH_CLEAR0 register accessor: an alias for `Reg<MUX_SWITCH_CLEAR0_SPEC>`"],["MUX_SWITCH_DS_CTRL","MUX_SWITCH_DS_CTRL register accessor: an alias for `Reg<MUX_SWITCH_DS_CTRL_SPEC>`"],["MUX_SWITCH_SQ_CTRL","MUX_SWITCH_SQ_CTRL register accessor: an alias for `Reg<MUX_SWITCH_SQ_CTRL_SPEC>`"],["MUX_SWITCH_STATUS","MUX_SWITCH_STATUS register accessor: an alias for `Reg<MUX_SWITCH_STATUS_SPEC>`"],["RANGE_COND","RANGE_COND register accessor: an alias for `Reg<RANGE_COND_SPEC>`"],["RANGE_INTR","RANGE_INTR register accessor: an alias for `Reg<RANGE_INTR_SPEC>`"],["RANGE_INTR_MASK","RANGE_INTR_MASK register accessor: an alias for `Reg<RANGE_INTR_MASK_SPEC>`"],["RANGE_INTR_MASKED","RANGE_INTR_MASKED register accessor: an alias for `Reg<RANGE_INTR_MASKED_SPEC>`"],["RANGE_INTR_SET","RANGE_INTR_SET register accessor: an alias for `Reg<RANGE_INTR_SET_SPEC>`"],["RANGE_THRES","RANGE_THRES register accessor: an alias for `Reg<RANGE_THRES_SPEC>`"],["SAMPLE_CTRL","SAMPLE_CTRL register accessor: an alias for `Reg<SAMPLE_CTRL_SPEC>`"],["SAMPLE_TIME01","SAMPLE_TIME01 register accessor: an alias for `Reg<SAMPLE_TIME01_SPEC>`"],["SAMPLE_TIME23","SAMPLE_TIME23 register accessor: an alias for `Reg<SAMPLE_TIME23_SPEC>`"],["SATURATE_INTR","SATURATE_INTR register accessor: an alias for `Reg<SATURATE_INTR_SPEC>`"],["SATURATE_INTR_MASK","SATURATE_INTR_MASK register accessor: an alias for `Reg<SATURATE_INTR_MASK_SPEC>`"],["SATURATE_INTR_MASKED","SATURATE_INTR_MASKED register accessor: an alias for `Reg<SATURATE_INTR_MASKED_SPEC>`"],["SATURATE_INTR_SET","SATURATE_INTR_SET register accessor: an alias for `Reg<SATURATE_INTR_SET_SPEC>`"],["START_CTRL","START_CTRL register accessor: an alias for `Reg<START_CTRL_SPEC>`"],["STATUS","STATUS register accessor: an alias for `Reg<STATUS_SPEC>`"]]});