initSidebarItems({"struct":[["I2C_S_CMD_SPEC","I2C slave command"],["R","Register `I2C_S_CMD` reader"],["S_ACK_R","Field `S_ACK` reader - When ‘1’, attempt to transmit an acknowledgement (ACK). When this action is performed, the hardware sets this field to ‘0’. In EZ mode, this field should be set to ‘0’ (it is only to be used in non EZ mode)."],["S_ACK_W","Field `S_ACK` writer - When ‘1’, attempt to transmit an acknowledgement (ACK). When this action is performed, the hardware sets this field to ‘0’. In EZ mode, this field should be set to ‘0’ (it is only to be used in non EZ mode)."],["S_NACK_R","Field `S_NACK` reader - When ‘1’, attempt to transmit a negative acknowledgement (NACK). When this action is performed, the hardware sets this field to ‘0’. In EZ mode, this field should be set to ‘0’ (it is only to be used in non EZ mode). This command has a higher priority than I2C_S_CMD.S_ACK, I2C_CTRL.S_READY_ADDR_ACK or I2C_CTRL.S_READY_DATA_ACK."],["S_NACK_W","Field `S_NACK` writer - When ‘1’, attempt to transmit a negative acknowledgement (NACK). When this action is performed, the hardware sets this field to ‘0’. In EZ mode, this field should be set to ‘0’ (it is only to be used in non EZ mode). This command has a higher priority than I2C_S_CMD.S_ACK, I2C_CTRL.S_READY_ADDR_ACK or I2C_CTRL.S_READY_DATA_ACK."],["W","Register `I2C_S_CMD` writer"]]});